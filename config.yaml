# Multi-AI CLI Interaction POC Configuration
# Values based on empirical testing and observation
# Supports: Claude Code and Gemini CLI
#
# IMPORTANT: Startup timeouts should be generous to handle real-world variability:
# - Network latency for credential loading
# - System resource availability
# - First-time initialization vs. cached startup
# - Better to wait longer than fail prematurely

claude:
  # Startup timing
  startup_timeout: 20  # Total seconds to wait for Claude to start (allows for variability)
  trust_wait: 3        # Wait after confirming trust prompt
  init_wait: 3         # Wait after initialization

  # Response timing
  response_timeout: 30      # Max seconds to wait for command response
  ready_check_interval: 0.5  # Seconds between output stability checks
  ready_stable_checks: 3     # Consecutive stable checks required

  # Command patterns and indicators
  prompt_pattern: ">"                    # Input prompt (not reliable for ready detection)
  ready_indicators:                      # Patterns indicating ready state
    - "────────────────────────"         # Separator line
    - "? for shortcuts"                  # Status line
  loading_indicators:
    - "⎿"
    - "Running…"
    - "Waiting…"
    - "Working…"
  response_complete_markers:
    - "› "
  thinking_indicator: "Lollygagging…"    # Shows when processing
  submit_key: "Enter"                    # Key tmux should send to submit commands
  text_enter_delay: 0.1                  # Delay between text and Enter

  # Path to Claude Code executable
  executable: "claude"  # Assumes it's in PATH
  executable_args:
    - "--dangerously-skip-permissions"

  # Response marker
  response_marker: "●"  # Bullet point for Claude responses
  pause_on_manual_clients: false  # Allow read-only tmux attach without pausing automation

gemini:
  # Startup timing
  startup_timeout: 60  # Total seconds to wait for Gemini to start (allows for variability, credential loading, etc.)
  init_wait: 3         # Wait after initialization

  # Response timing
  response_timeout: 75      # Max seconds to wait for command response
  tool_timeout: 15          # Additional time for tool execution
  ready_check_interval: 0.5  # Seconds between output stability checks
  ready_stable_checks: 6     # Consecutive stable checks required

  # Command patterns and indicators
  prompt_pattern: ">"                    # Input prompt
  ready_indicators:                      # Patterns indicating ready state
    - "Type your message or @path/to/file"
    - "Model:"                              # Transcript prefix
  loading_indicators:                    # Shows when processing
    - "⠦"
    - "⠼"
    - "Enhancing..."
    - "Counting electrons..."
  response_complete_markers:
    - "› "
    - "Type your message or @path/to/file"
  submit_key: "C-m"                      # Gemini prefers Ctrl-M when running in tmux
  text_enter_delay: 0.5                  # Give Gemini extra time to ingest pasted text
  post_text_delay: 0.5                  # Pause after pasting before submitting

  # Response marker
  response_marker: "✦"  # Sparkle for Gemini responses
  pause_on_manual_clients: false  # Allow read-only tmux attach without pausing automation

  # Tool support
  supports_tools: true   # Gemini can use external tools
  tool_marker: "✓"       # Checkmark for successful tool execution

  # Path to Gemini executable
  executable: "gemini"  # Assumes it's in PATH
  executable_args:
    - "--yolo"
    - "--screenReader"

codex:
  startup_timeout: 20
  init_wait: 1
  response_timeout: 150
  ready_check_interval: 0.5
  ready_stable_checks: 4
  prompt_pattern: ">"
  ready_indicators:
    - "OpenAI Codex"
    - "100% context left"
    - "Write tests for"
  loading_indicators:
    - "Planning integration"
    - "Working for"
    - "◦"
  response_complete_markers:
    - "› "
    - "context left"
  submit_key: "Enter"
  text_enter_delay: 0.1
  response_marker: "▸"
  executable: "codex"
  executable_args: []
  pause_on_manual_clients: false

tmux:
  # Session configuration
  claude_session: "claude"   # Default Claude session name
  gemini_session: "gemini"   # Default Gemini session name
  codex_session: "codex"     # Default Codex session name

  # Output capture settings
  capture_lines: 500     # Default lines to capture from pane
  capture_delay: 0.1     # Seconds to wait before capturing output

  # Command injection settings
  text_enter_delay: 0.1  # Delay between text and Enter key (seconds)

  # Session management
  kill_timeout: 2        # Seconds to wait after killing session

logging:
  # Logging configuration
  level: "DEBUG"          # DEBUG, INFO, WARNING, ERROR
  file: "logs/poc.log"   # Log file path
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  max_bytes: 10485760    # 10MB
  backup_count: 3        # Number of backup files to keep

worktree:
  # Git worktree configuration for multi-instance testing
  main_path: "/mnt/f/PROGRAMMING_PROJECTS/OrchestratorTest"
  tmux_path: "/mnt/f/PROGRAMMING_PROJECTS/OrchestratorTest-tmux"

test_commands:
  # Sample commands for testing
  simple:
    - "What is 2 + 2?"
    - "What is Python?"
    - "List 3 programming languages"

  context:
    - "Read file: spec.md"
    - "Summarize the main goals"
    - "What is the project about?"

  file_operations:
    - "List files in src/"
    - "Read src/controllers/tmux_controller.py"
    - "Explain the wait_for_ready method"

performance:
  # Performance measurement settings
  measure_latency: true
  log_timings: true

  # Expected performance (for validation)
  expected_command_latency_ms: 100
  expected_capture_latency_ms: 500
  expected_startup_time_s: 10

experimental:
  # Experimental features (not yet implemented)
  auto_retry_on_failure: false
  max_retries: 3
  streaming_capture: false
  parallel_sessions: false
