› Write a Python function `compare_parser_outputs(raw: str, parsed: str) -> dict` that compares two strings and returns
  counts of lines, characters, and a boolean flag for equality. Include doctest-style usage examples.


• Function

  def compare_parser_outputs(raw: str, parsed: str) -> dict:
      """
      Compare raw and parsed strings by line count, character count, and equality flag.

      >>> compare_parser_outputs("a\nb", "a\nb")
      {'raw_lines': 2, 'parsed_lines': 2, 'raw_chars': 3, 'parsed_chars': 3, 'is_equal': True}
      >>> compare_parser_outputs("foo", "bar")
      {'raw_lines': 1, 'parsed_lines': 1, 'raw_chars': 3, 'parsed_chars': 3, 'is_equal': False}
      >>> compare_parser_outputs("", "non-empty")
      {'raw_lines': 0, 'parsed_lines': 1, 'raw_chars': 0, 'parsed_chars': 9, 'is_equal': False}
      """
      raw_lines = raw.count("\n") + (1 if raw else 0)
      parsed_lines = parsed.count("\n") + (1 if parsed else 0)
      return {
          "raw_lines": raw_lines,
          "parsed_lines": parsed_lines,
          "raw_chars": len(raw),
          "parsed_chars": len(parsed),
          "is_equal": raw == parsed,
      }


› Summarize recent commits

  100% context left · ? for shortcuts
